# Default values for opencloud.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

opencloud:
  # Primary domain for the opencloud service
  domain: cloud.example.com
  replicaCount: 1
  initContainers: []

workers:
  # This is the number of replicas for the worker service
  replicaCount: 1
  initContainers: []
  antivirus:
    concurrency: 2

collaboration:
  # Domain where the collaboration (WOPI) service is reachable
  domain: wopi.example.com
  # This is the number of replicas for the collaboration service
  replicaCount: 1
  initContainers: []
  ingress:
    # Enable or disable ingress for the collaboration service independently
    enabled: true

webOffice:
  url: "https://weboffice.example.com"  # The actual frontend address used by the browser

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  # OpenCloud image registry
  registry: docker.io
  # OpenCloud image repository
  repository: opencloudeu/opencloud-rolling
  # OpenCloud image tag
  tag: "2.1.0"
  # Image pull policy
  pullPolicy: IfNotPresent

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

csp:
  # Optional full override of the entire CSP directive structure.
  # When set, this will completely replace the built-in CSP configuration.
  # Use this only if you need full manual control.
  override: {}
  # Example:
  # override:
  #   directives:
  #     default-src:
  #       - "'none'"
  #     script-src:
  #       - "'self'"
  #       - "'unsafe-inline'"
  #     connect-src:
  #       - "'self'"
  #       - "https://api.custom.example.com"
  #     img-src:
  #       - "'self'"
  #       - "data:"
  #       - "https://cdn.custom.example.com"

ldap:
  serverUrl: ldap://openldap-headless.openldap.svc.cluster.local:1389
  insecure: true
  bindDn: cn=admin,dc=opencloud,dc=eu
  # REQUIRED: Name of an existing Kubernetes Secret that contains the LDAP bind password.
  # The secret must include a key named OC_LDAP_BIND_PASSWORD.
  # This secret will be used to inject the LDAP bind password as an environment variable
  # into the container. It must be created ahead of time and not managed by this chart.
  #
  # Example command to create the secret:
  #   kubectl create secret generic opencloud-ldap-secret \
  #     --from-literal=OC_LDAP_BIND_PASSWORD=ldap-admin-password
  existingSecret: opencloud-ldap-secret
  groupBaseDn: ou=groups,dc=opencloud,dc=eu
  groupFilter: ""
  groupSchemaId: entryUUID
  groupCreateBaseDn: "ou=custom,ou=groups,dc=opencloud,dc=eu"
  userBaseDn: ou=users,dc=opencloud,dc=eu
  userFilter: "(objectclass=inetOrgPerson)"
  userSchemaId: "entryUUID"
  disableUserMechanism: "none"
  serverUuid: "true"
  refintEnabled: "true" # osixia has refint enabled.
  readonlyUserAttributes: "user.onPremisesSamAccountName,user.displayName,user.mail,user.passwordProfile,user.accountEnabled,user.appRoleAssignments"

auth:
  # Configuration related to OpenID Connect (OIDC) authentication
  oidc:
    # Full issuer URL (used for OIDC discovery, etc.)
    issuer: "https://keycloak.example.com/realms/openCloud"

    # Client ID registered with the OIDC provider for this application
    clientId: web

    # URL where users can manage their account/profile on the OIDC provider
    accountEditLinkHref: "https://keycloak.example.com/realms/openCloud/account"

ingress:
  # Global ingress toggle
  enabled: true

  # Optional ingress class, e.g., "nginx" or empty for default
  className: ""

  # Additional ingress annotations (e.g., cert-manager, ingress controller settings)
  annotations: {}

  # TLS configuration: single TLS secret to cover all hosts
  tls:
    secretName: ""

log:
  # This is the log level
  level: info
  # enable colored log output
  color: false
  # enable pretty log output. default is json lines
  pretty: false

tracing:
  enabled: false
  type: jaeger
  endpoint: jaeger-agent.observability.svc.cluster.local:6831

audit:
  enabled: false

virusscan:
  enabled: false
  infectedFileHandling: abort
  maxScanSize: "10000000"  # 10 MB
  icap:
    timeout: "30s"
    url: http://opendesk-clamav-icap.clamav:1344
    service: avscan

emailNotifications:
  enabled: false
  smtp:
    host: inbucket.inbucket.svc.cluster.local
    port: 2500
    sender: "OpenCloud <noreply@cloud.opencloud.test>"
    authentication: none
    encryption: none

nats:
  # This is the NATS endpoint
  endpoint: ""
  # This is the NATS cluster name
  cluster: ""
  tls:
    enabled: false
    insecure: true

# This is the maximum size of the archiver in bytes
# Used it to prevent it from growing in memory indefinitely
archiverMaxSize: "10000000000"

eventsNumConsumers: 5

persistence:
  accessMode: ReadWriteOnce
  storageClass: "opencloud"
  searchSize: 1Gi
  configSize: 10Mi
  size: 10Gi

s3:
  endpoint: "http://minio.minio.svc.cluster.local:9000"
  region: default
  accessKey: opencloud
  secretKey: opencloud-secret-key
  bucket: opencloud-bucket

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
#livenessProbe:
#  httpGet:
#    path: /
#    port: 9200
#readinessProbe:
#  httpGet:
#    path: /
#    port: 9200

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

# Additional resources to be added to the chart, e.g., ConfigMaps, Secrets, etc
extraResources: []
# Example:
# extraResources:
#   - apiVersion: v1
#     kind: Secret
#     metadata:
#       name: opencloud-ldap-secret
#     type: Opaque
#     stringData:
#       OC_LDAP_BIND_PASSWORD: ldap-admin-password